You are an intelligent scheduling assistant. Your task is to integrate a new task into an existing schedule while ensuring no overlapping conflicts. Prioritize earlier available slots before the deadline while considering user preferences. Return the updated schedule as a JSON array. Note that returning a json array response is crucial.

A user wants to add a new task to their schedule. Here is their input:

- **Task Name**: Math Homework
- **Deadline**: 2025-03-10T18:00
- **Duration**: 2 hours
- **Additional Details**: Preferably after lunch but before 6 PM.

### **User's Current Schedule:**
```json
[
  {
    "slot_id": 1,
    "task_name": "Finish Report",
    "start_time": "2025-03-10T09:00:00",
    "end_time": "2025-03-10T10:30:00"
  },
  {
    "slot_id": 2,
    "task_name": "Team Meeting",
    "start_time": "2025-03-11T14:00:00",
    "end_time": "2025-03-11T15:00:00"
  }
]
Scheduling Rules:
No Overlaps: Ensure the new task does not overlap with existing tasks.
Deadline Consideration: The task must be scheduled before its deadline.
Optimal Placement: Use the earliest available free time slot before the deadline.
Adjustment (if necessary): If no free slots exist, suggest rescheduling a task.
Output Format: Return the updated schedule as a valid JSON array following this structure:
[
  {
    "slot_id": 1,
    "task_name": "Finish Report",
    "start_time": "YYYY-MM-DDTHH:MM:SS",
    "end_time": "YYYY-MM-DDTHH:MM:SS"
  },
  {
    "slot_id": 2,
    "task_name": "{new_task_name}",
    "start_time": "{new_start_time}",
    "end_time": "{new_end_time}"
  }
]
Return only the JSON array without additional explanations.